<?php
/**
 * Created by PhpStorm.
 * User: lenovo
 * Date: 2019-03-01
 * Time: 14:09
 */
require_once(__DIR__ . '/../../wishlistObject.php');

class WishlistWishlistModuleFrontController extends ModuleFrontController
{
    public $auth = true;


    public function __construct()
    {
        parent::__construct();
        $this->authRedirection = $this->context->link->getModuleLink('wishlistObject', 'wishlistObject');
    }

    public function init()
    {
        $this->page_name = 'wishlistObject';

        parent::init();
    }

    public function initContent()
    {
        parent::initContent();
        $this->setTemplate('module:wishlist/views/templates/front/test.tpl');
        $this->context->link->getModuleLink('wishlistObject', 'wishlistObject');

//        if (!$this->context->customer->isLogged() && $this->php_self != 'authentication' && $this->php_self != 'password') {
//
//            Tools::redirect('index.php?controller=authentication?back=my-account');
//        }
    }


    public function postProcess()
    {

        parent::postProcess(); // TODO: Change the autogenerated stub
        if ($this->context->customer->isLogged()) {
            $id = null;
            if (Tools::isSubmit('submit_wishlist')) {
                $this->assign();

            }
        }
    }


    private function assign()
    {
        $wishlistObject = new wishlistObject();

        if ($wishlistObject->checkWishListExist($this->context->customer->id) === false) {
            $wishlistObject->id_customer = (int)$this->context->customer->id;
            $wishlistObject->save();
            $product_id = Tools::getValue('product_id');
            $wishlistObject->addProduct($product_id, $this->context->customer->id);
//            $wishlistObject->save();
//            dump($this->context->customer->id);
        }
        else {
            $product_id = Tools::getValue('product_id');
            $wishlistObject->addProduct($product_id, $this->context->customer->id);
        }

    }
}
